name: Test Version Installation

on:
  push:
    branches: [ main ]
    paths:
      - '**.rb'
      - 'README.md'
      - '.github/workflows/test-versions.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.rb'
      - 'README.md'
      - '.github/workflows/test-versions.yml'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  test-versions:
    name: Test Version Installation
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install latest version
        run: |
          brew tap oculus-core/gogo
          brew install gogo
          echo "LATEST_VERSION=$(gogo version | grep Version | awk '{print $2}')" >> $GITHUB_ENV
          echo "✅ Successfully installed latest version: ${{ env.LATEST_VERSION }}"

      - name: Uninstall latest version
        run: brew uninstall gogo

      - name: Install 0.1.x version series
        run: |
          brew install oculus-core/gogo/gogo@0.1
          INSTALLED_VERSION=$(gogo version | grep Version | awk '{print $2}')
          echo "✅ Successfully installed 0.1.x series: $INSTALLED_VERSION"
          
          # Verify we can execute commands
          gogo --help
          
          # Check that it's actually the 0.1.x series
          if [[ ! $INSTALLED_VERSION == 0.1.* ]]; then
            echo "❌ Installed version $INSTALLED_VERSION is not in the 0.1.x series!"
            exit 1
          fi

      - name: Test specific version installation
        run: |
          # Create a temporary versions tap
          brew tap-new $USER/testversions
          
          # Extract a specific version (use the previous release before the latest)
          SPECIFIC_VERSION="0.1.3"
          brew extract --version=$SPECIFIC_VERSION oculus-core/gogo/gogo $USER/testversions
          
          # Uninstall current version
          brew uninstall gogo@0.1
          
          # Install specific version
          brew install gogo@$SPECIFIC_VERSION
          
          # Verify correct version is installed
          INSTALLED_VERSION=$(gogo version | grep Version | awk '{print $2}')
          echo "✅ Successfully installed specific version: $INSTALLED_VERSION"
          
          if [[ "$INSTALLED_VERSION" != "$SPECIFIC_VERSION" ]]; then
            echo "❌ Expected version $SPECIFIC_VERSION but got $INSTALLED_VERSION"
            exit 1
          fi
          
          # Verify we can execute commands with this version
          gogo --help

      - name: Test version switching
        run: |
          # Re-install 0.1.x version
          brew install oculus-core/gogo/gogo@0.1
          
          # Should have both versions installed now
          brew list | grep gogo
          
          # Unlink current version
          brew unlink gogo@0.1
          
          # Link specific version
          brew link gogo@0.1.3
          
          # Verify correct version is active
          ACTIVE_VERSION=$(gogo version | grep Version | awk '{print $2}')
          if [[ "$ACTIVE_VERSION" != "0.1.3" ]]; then
            echo "❌ Expected version 0.1.3 after switching but got $ACTIVE_VERSION"
            exit 1
          fi
          
          echo "✅ Successfully switched to version 0.1.3" 